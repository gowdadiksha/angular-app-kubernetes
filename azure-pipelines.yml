- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN(ff193f93-cf1f-4102-837e-097d881c89fa)'
    azureContainerRegistry: '{"loginServer":"dcontreg1.azurecr.io", "id" : "/subscriptions/ff193f93-cf1f-4102-837e-097d881c89fa/resourceGroups/spotinstance/providers/Microsoft.ContainerRegistry/registries/dcontreg1"}'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Build services'
 # Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f58cde20-8f91-4d94-874d-9b92c8c1a66f'
  imageRepository: 'gowdadikshaangularappkubernetes'
  containerRegistry: 'dcontreg.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
